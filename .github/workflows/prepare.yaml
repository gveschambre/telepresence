name: Prepare release

on:
  push:
    branches:
      - 'release/[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - 'release/**'
    types: [ labeled ]

jobs:
  check-commit:
    if: (github.event_name == 'push' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'release')))
    runs-on: ubuntu-latest
    outputs:
      is_prepare_release: ${{ steps.check.outputs.is_prepare_release }}
      telepresence_version: ${{ steps.check.outputs.telepresence_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check commit
        id: check
        uses: shepz/telepresence-internal-actions/check-commit@main

  prepare-release:
    if: github.actor != 'd6e-automaton'
    runs-on: ubuntu-latest
    needs: check-commit
    steps:
#      - uses: actions/checkout@v3
#        with:
#          token: ${{ secrets.GH_AUTO_RELEASE_TOKEN }}
#          ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
#
#      - uses: actions/setup-go@v3
#        with:
#          go-version: '~1.21.0'

      - name: Get release type
        id: get_release_type
        shell: bash
        run: |
          echo "is_ga=false" >> $GITHUB_ENV
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "is_ga=true" >> $GITHUB_ENV
          fi
      - name: Prepare release
        uses: shepz/telepresence-internal-actions/execute-release-commands@main
        with:
          gh_auto_release_token: ${{ secrets.GH_AUTO_RELEASE_TOKEN }}
          gh_auto_release_email: ${{ secrets.GH_AUTO_RELEASE_EMAIL }}
          gh_auto_release_user: ${{ secrets.GH_AUTO_RELEASE_USER }}
          telepresence_version: ${{ needs.check-commit.outputs.telepresence_version }}
          repository: "shepz/telepresence"
          commands: "make prepare-release"
          post_commands: "make push-tags"

