name: Releases

on:
  push:
    tags:
      # These aren't regexps. They are "Workflow Filter patterns"
      - v[0-9]+.[0-9]+.[0-9]
      - v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+

jobs:
  build-release:
    strategy:
      fail-fast: false
      matrix:
        runners:
          - ubuntu-latest
#          - ubuntu-arm64
          - macos-latest
#          - macOS-arm64
          - windows-2019
    runs-on: ${{ matrix.runners }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/install-dependencies
        name: install dependencies
      - name: set version
        shell: bash
        run: echo "TELEPRESENCE_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: generate binaries
        run: make release-binary
      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: build-output/release
          retention-days: 1
#      - if: runner.os == 'Linux' && runner.arch == 'X64'
#        name: Upload Docker image
#        run: |
#          docker login -u="${{ secrets.DOCKERHUB_USERNAME }}" -p="${{ secrets.DOCKERHUB_PASSWORD }}"
#          make push-tel2-image

  release:
    runs-on: ubuntu-latest
    needs:
      - build-release
    env:
      TELEPRESENCE_VERSION: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: '~1.21.0'
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Determine if version is RC or GA
        id: semver_check
        run: |
          if [[ "${{ env.TELEPRESENCE_VERSION }}" =~ ^v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+$ ]]; then
          echo "MAKE_LATEST=false" >> $GITHUB_ENV
          echo "PRERELEASE=true" >> $GITHUB_ENV
          else
          echo "MAKE_LATEST=true" >> $GITHUB_ENV
          echo "PRERELEASE=false" >> $GITHUB_ENV
          fi
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "binaries/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ env.PRERELEASE }}
          makeLatest: ${{ env.MAKE_LATEST }}
          tag: ${{ env.TELEPRESENCE_VERSION }}
          body: |
            ## Official Release Artifacts
            ### Linux
               - ðŸ“¦ [telepresence-linux-amd64](https://app.getambassador.io/download/tel2oss/releases/download/${{ env.TELEPRESENCE_VERSION }}/telepresence-linux-amd64)
               - ðŸ“¦ [telepresence-linux-arm64](https://app.getambassador.io/download/tel2oss/releases/download/${{ env.TELEPRESENCE_VERSION }}/telepresence-linux-arm64)
            ### OSX Darwin
               - ðŸ“¦ [telepresence-darwin-amd64](https://app.getambassador.io/download/tel2oss/releases/download/${{ env.TELEPRESENCE_VERSION }}/telepresence-darwin-amd64)
               - ðŸ“¦ [telepresence-darwin-arm64](https://app.getambassador.io/download/tel2oss/releases/download/${{ env.TELEPRESENCE_VERSION }}/telepresence-darwin-arm64)
            ### Windows
               - ðŸ“¦ [telepresence-windows-amd64.zip](https://app.getambassador.io/download/tel2oss/releases/download/${{ env.TELEPRESENCE_VERSION }}/telepresence-windows-amd64.zip)

            For more builds across platforms and architectures, see the `Assets` section below.
            And for more information, visit our [installation docs](https://www.telepresence.io/docs/latest/quick-start/).

            ![Assets](https://static.scarf.sh/a.png?x-pxid=d842651a-2e4d-465a-98e1-4808722c01ab)
      - name: Notify Developers about Release
        id: slack
        uses: shepz/telepresence-internal-actions/slack-notification-release-success@main
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          telepresence_version: ${{ env.TELEPRESENCE_VERSION }}
          telepresence_product: "OSS"

  trigger-pro-release:
    runs-on: ubuntu-latest
    needs:
      - release
    env:
      TELEPRESENCE_VERSION: ${{ github.ref_name }}
    steps:
      - name: Trigger other releases
        id: trigger
        uses: shepz/telepresence-internal-actions/execute-release-commands@main
        with:
          gh_auto_release_token: ${{ secrets.GH_AUTO_RELEASE_TOKEN }}
          gh_auto_release_email: ${{ secrets.GH_AUTO_RELEASE_EMAIL }}
          gh_auto_release_user: ${{ secrets.GH_AUTO_RELEASE_USER }}
          telepresence_version: ${{ env.TELEPRESENCE_VERSION }}
          repository: "shepz/telepresence-pro"
          pre_push_branch_commands: "make prepare-release && make generate"
          pre_post_branch_commands: "make push-tags"

  slack-notification:
    needs: trigger-pro-release
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify Developers about Workflow Error
        id: slack
        uses: shepz/telepresence-internal-actions/slack-notification-workflow-error@main
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
#  test-release:
#    needs: release
#    strategy:
#      fail-fast: false
#      matrix:
#        runners:
#          - ubuntu-latest
#          - ubuntu-arm64
#          - macos-latest
#          - macOS-arm64
#          - windows-2019
#    runs-on: ${{ matrix.runners }}
#    steps:
#      - uses: actions/checkout@v3
#      - name: Test release
#        uses: ./.github/actions/test-release
#        with:
#          release_version: ${{ needs.prepare-release.outputs.telepresence_version }}
