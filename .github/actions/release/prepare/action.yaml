name: Prepare release
description: "Prepare release"
inputs:
  gh_auto_release_token:
    description: "The token to use to authenticate with GitHub"
    required: true
  gh_auto_release_email:
    description: "The email to use to authenticate with GitHub"
    required: true
  gh_auto_release_user:
    description: "The user to use to authenticate with GitHub"
    required: true
  is_ga:
    description: "Is ga"
    required: true
outputs:
  telepresence_version:
    description: "telepresence version"
    value: ${{ steps.get_event.outputs.telepresence_version }}
runs:
  using: composite
  steps:
    - name: Set outputs
      id: get_event
      shell: bash
      run: |
        if [[ "${{ inputs.is_ga }}" == true ]]; then
          echo "telepresence_version=v$(echo ${{ github.head_ref }} | sed -e "s/^release\///")" >> $GITHUB_OUTPUT
        else
          CURRENT_VERSION=$(echo $GITHUB_REF | sed -e "s/^refs\/heads\/release\///")
          git fetch --tags
          TAGS=$(git tag | grep -E "^v[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?$" | sort -V)
          ESCAPED_CURRENT_VERSION=$(echo $CURRENT_VERSION | sed 's/\./\\./g')
          LAST_TAG=$(echo "$TAGS" | grep -E "^v$ESCAPED_CURRENT_VERSION(-rc\.[0-9]+)?$") || true

          if [[ "$LAST_TAG" =~ -rc\.([0-9]+)$ ]]; then
            RC_NUM=${BASH_REMATCH[1]}
            NEXT_RC_NUM=$((RC_NUM+1))
            NEXT_TAG="$CURRENT_VERSION-rc.$NEXT_RC_NUM"
          else
            NEXT_TAG="$CURRENT_VERSION-rc.0"
          fi

          echo "telepresence_version=v$(echo $NEXT_TAG)" >> $GITHUB_OUTPUT

        fi

    - name: Setup Git Config
      shell: bash
      run: |
        set -x

        git config --global user.email '${{ inputs.GH_AUTO_RELEASE_EMAIL }}'
        git config --global user.name '${{ inputs.GH_AUTO_RELEASE_USER }}'

    - name: Commit changes
      shell: bash
      run: |
        make prepare-release TELEPRESENCE_VERSION=${{ steps.get_event.outputs.telepresence_version }}
        git push origin HEAD:${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ inputs.GH_AUTO_RELEASE_TOKEN }}


